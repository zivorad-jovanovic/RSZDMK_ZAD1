#include <LiquidCrystal.h>
#include <util/delay.h>

LiquidCrystal lcd(A0, A1, A2, A3, A4, A5);

char ocitaj_taster()
{
  char taster = 0;
  unsigned char row;
  
  MCUCR &= ~0x10;
  PORTD = 0x0f; 
  
  for(row = 0x80; row != 0x08; row >>= 1)
  {
    DDRD = row;
	_delay_ms(2);
    
    switch(row | ((~PIND) & 0x0f))
    {
      case 0x88:
      	taster = '1'; break;
      case 0x84:
      	taster = '2'; break;
      case 0x82:
      	taster = '3'; break;
      case 0x81:
      	taster = 'A'; break;
		
	  case 0x48:
      	taster = '4'; break;
      case 0x44:
      	taster = '5'; break;
      case 0x42:
      	taster = '6'; break;
      case 0x41:
      	taster = 'B'; break;
		
	  case 0x28:
      	taster = '7'; break;
      case 0x24:
      	taster = '8'; break;
      case 0x22:
      	taster = '9'; break;
      case 0x21:
      	taster = 'C'; break;
		
	  case 0x18:
      	taster = '*'; break;
      case 0x14:
      	taster = '0'; break;
      case 0x12:
      	taster = '#'; break;
      case 0x11:
      	taster = 'D'; break;
    }
  }
  
  return taster;
}

byte pik[8] = {
B00100 ,
B01110 ,
B11111 ,
B01110 ,
B01110 ,
B00100 ,
B00000 ,
};

byte karo[8] = {
B00100 ,
B01110 ,
B11111 ,
B11111 ,
B00100 ,
B00100 ,
B00100 ,
};

byte herc[8] = {
B00000 ,
B01010 ,
B11111 ,
B11111 ,
B01110 ,
B00100 ,
B00000 ,
};


byte tref[8] = {
B01100 ,
B01100 ,
B10001 ,
B0110 ,
B01110 ,
B01110 ,
B01110 ,
};


int generisanje(int min,int max)
{
int distance,x,slucajno;
  distance = max - min;
  slucajno = rand();
  
  x = slucajno % distance;
  return x+min;

}



int main()
{
  	  lcd.begin(16, 2);
	  int trenutni,sledeci = 0;
       lcd.createChar(0 , pik ) ;
        lcd.createChar(1 , karo ) ;
       lcd.createChar(2 , herc ) ;
       lcd.createChar(3 , tref ) ;
  
	while(1)
    { 
	  char taster = ocitaj_taster();
      
   if(taster == '*')
   {
     int stanje = taster;  //zapamtimo da je * pritisnuta
     
     lcd.clear();
     
     int r1 = generisanje(0,3);
     int r2 = generisanje(0,3);
     int r3 = generisanje(0,3);
     int r4 = generisanje(0,3);
     
     lcd.write(byte(r1));
     lcd.write(byte(r2));
     lcd.write(byte(r3));
     lcd.write(byte(r4));
     
     _delay_ms(2000);
     lcd.clear();
     lcd.print("----");
     lcd.setCursor(0,0);
     lcd.cursor();
     lcd.blink();
       
     int pozicija = 0,j=0;
     
     switch(taster)
     {
     	case '2' :
       	if(stanje)
        {
        	lcd.write(byte(pozicija));
          pozicija++;
          
          	if(pozicija == 3)
              pozicija = 0;
        }
       break;
       
       case '8' :
       	if(stanje)
        {
        	lcd.write(byte(pozicija));
          pozicija--;
          
          	if(pozicija < 0)
              pozicija = 3;
        }
       break;
       
       case '6' : 
       if(stanje)
       {
       	lcd.setCursor(0,j+1);
         lcd.cursor();
         lcd.blink();
         	if(j==4)
              j = -1;
       }
       break;
       
       case '4' :
       
        if(stanje)
       {
       	lcd.setCursor(0,j-1);
          lcd.cursor();
         lcd.blink();
         	if(j<0)
              j = 3;
       }
       break;
        
       
     }
     
     
      	if (trenutni ==0 && sledeci!=0)
      {
        lcd.print(taster);
        _delay_ms(200);
        
          
      }
      trenutni = sledeci;
      sledeci = taster;
    }
      
      
      
      
   }
  
  	return 0;
}